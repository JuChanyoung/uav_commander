#include "Teleop_UAV.h"

Teleop_UAV::Teleop_UAV():
{
    // Keyboard Settings :
    signal(SIGINT,quit);
    // get the console in raw mode
    tcgetattr(kfd, &cooked);
    memcpy(&raw, &cooked, sizeof(struct termios));
    raw.c_lflag &=~ (ICANON | ECHO);
    // Setting a new line, then end of file
    raw.c_cc[VEOL] = 1;
    raw.c_cc[VEOF] = 2;
    tcsetattr(kfd, TCSANOW, &raw);

    // Description:

    {
        puts("Reading from keyboard");
        puts("----------------------------------------------------------");
        puts(" Use the following keys to control the ardrone");
        puts(" f            : Flat Trim");
        puts(" l            : Land");
        puts(" t            : Take off");
        puts(" e            : Toggle Emergency Light");
        puts(" w            : Move Forward");
        puts(" s            : Move Backward");
        puts(" d            : Move Right");
        puts(" a            : Move Left");
        puts(" Up Arrow     : Move up");
        puts(" Down Arrow   : Move down");
        puts(" Right Arrow  : Rotoate right");
        puts(" Left Arrow   : Rotoate Left");
    }
}

void Teleop_UAV::keyLoop()
{
    char c;
    bool dirty = false;

    // get the next event from the keyboard
    if(read(kfd, &c, 1) < 0)
    {
        perror("read():");
        exit(-1);
    }

    std::cout <<"char= " << c << std::endl;
    switch(c)
    {
    case Arrow_U: std::cout << "Arrow_U" << std::endl; break;
    case Arrow_D: std::cout << "Arrow_U" << std::endl; break;
    case Arrow_L: std::cout << "Arrow_U" << std::endl; break;
    case Arrow_R: std::cout << "Arrow_U" << std::endl; break;
    case Key_w  : std::cout << "Arrow_U" << std::endl; break;
    case Key_s  : std::cout << "Arrow_U" << std::endl; break;
    case Key_d  : std::cout << "Arrow_U" << std::endl; break;
    case Key_a  : std::cout << "Arrow_U" << std::endl; break;
        //case Key_f  : std::cout << "Arrow_U" << std::endl; Flat_Trim();                    break;
        //case Key_l  : std::cout << "Arrow_U" << std::endl; Land();                         break;
        //case Key_t  : std::cout << "Arrow_U" << std::endl; TakeOff();                      break;
        //case Key_e  : std::cout << "Arrow_U" << std::endl; EmergencyToggle();              break;
    }
}

void quit(int sig)
{
    tcsetattr(kfd, TCSANOW, &cooked);
    ros::shutdown();
    exit(0);
}

